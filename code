import pygame
import sys
import math
import time
import random

pygame.init()

# Screen size
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pet Simulation Game")

# Colors
WHITE = (255, 255, 255)
BROWN = (139, 69, 19)
BLACK = (0, 0, 0)

# Load images and scale
boy_img = pygame.transform.scale(pygame.image.load("boy.png"), (80, 120))
girl_img = pygame.transform.scale(pygame.image.load("girl.png"), (80, 120))
dog_img = pygame.transform.scale(pygame.image.load("dog.png"), (100, 80))

house_bg = pygame.transform.scale(pygame.image.load("house_background.png"), (WIDTH, HEIGHT))
street_bg = pygame.transform.scale(pygame.image.load("street.png"), (WIDTH, HEIGHT))
shop_bg = pygame.transform.scale(pygame.image.load("shop.png"), (WIDTH, HEIGHT))
pet_bg = pygame.transform.scale(pygame.image.load("pet_bg.png"), (WIDTH, HEIGHT))
hacker_bg = pygame.transform.scale(pygame.image.load("hacker_bg.png"), (WIDTH, HEIGHT))
robber_bg = pygame.transform.scale(pygame.image.load("robber_bg.png"), (WIDTH, HEIGHT))
spy_bg = pygame.transform.scale(pygame.image.load("spy_bg.png"), (WIDTH, HEIGHT))

font = pygame.font.SysFont("Arial", 28)

def draw_text(text, x, y, color=BLACK):
    rendered = font.render(text, True, color)
    screen.blit(rendered, (x, y))

def select_character():
    """Let the player choose boy or girl at start."""
    selecting = True
    while selecting:
        screen.fill(WHITE)
        draw_text("Choose your character:", 250, 150)
        screen.blit(boy_img, (200, 250))
        screen.blit(girl_img, (500, 250))
        draw_text("Boy", 230, 380)
        draw_text("Girl", 530, 380)
        pygame.display.update()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                mx, my = pygame.mouse.get_pos()
                boy_rect = pygame.Rect(200, 250, 80, 120)
                girl_rect = pygame.Rect(500, 250, 80, 120)
                if boy_rect.collidepoint(mx, my):
                    return "boy"
                elif girl_rect.collidepoint(mx, my):
                    return "girl"

def run_quiz():
    """Dummy function to select job."""
    # For demo, randomly pick job
    return random.choice(["hacker", "robber", "spy"])

def main_game():
    job = run_quiz()
    scene = "house"
    char_x, char_y = 100.0, 350.0
    dog_x, dog_y = 200.0, 400.0

    # Door rectangles for scenes
    door_house_to_street = pygame.Rect(0, 280, 80, 150)
    door_street_to_house = pygame.Rect(300, 550, 200, 40)
    door_street_to_shop = pygame.Rect(300, 100, 200, 40)
    door_street_to_pet = pygame.Rect(0, 250, 80, 150)
    door_street_to_job = pygame.Rect(700, 250, 80, 150)
    door_shop_to_street = pygame.Rect(300, 550, 200, 40)

    door_pet_to_workshop = pygame.Rect(100, 100, 100, 40)
    door_pet_to_vets = pygame.Rect(300, 100, 100, 40)
    door_pet_to_street = pygame.Rect(500, 100, 100, 40)

    char_sel = select_character()

    clock = pygame.time.Clock()
    player_spd = 5
    dog_spd = 3

    # For feeding logic placeholders
    dog_hungry = False
    dog_thirsty = False
    last_fed = time.time()
    last_drink = time.time()

    while True:
        screen.fill(WHITE)
        char_rect = pygame.Rect(char_x, char_y, 80, 120)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT]:
            char_x -= player_spd
        if keys[pygame.K_RIGHT]:
            char_x += player_spd
        if keys[pygame.K_UP]:
            char_y -= player_spd
        if keys[pygame.K_DOWN]:
            char_y += player_spd

        # Clamp character inside screen bounds
        char_x = max(0, min(WIDTH - 80, char_x))
        char_y = max(0, min(HEIGHT - 120, char_y))

        # Scene logic and door collision:
        if scene == "house":
            screen.blit(house_bg, (0, 0))
            pygame.draw.rect(screen, BROWN, door_house_to_street)
            draw_text("To Street", 5, door_house_to_street.y + 60, WHITE)

            if char_rect.colliderect(door_house_to_street):
                scene = "street"
                char_x, char_y = 100, 350

        elif scene == "street":
            screen.blit(street_bg, (0, 0))
            pygame.draw.rect(screen, BROWN, door_street_to_house)
            draw_text("Home", door_street_to_house.x + 70, door_street_to_house.y + 5, WHITE)

            pygame.draw.rect(screen, BROWN, door_street_to_shop)
            draw_text("Shop", door_street_to_shop.x + 60, door_street_to_shop.y + 5, WHITE)

            pygame.draw.rect(screen, BROWN, door_street_to_pet)
            draw_text("Pet Area", door_street_to_pet.x + 5, door_street_to_pet.y + 60, WHITE)

            pygame.draw.rect(screen, BROWN, door_street_to_job)
            draw_text("Job", door_street_to_job.x + 10, door_street_to_job.y + 60, WHITE)

            if char_rect.colliderect(door_street_to_house):
                scene = "house"
                char_x, char_y = 650, 350
            elif char_rect.colliderect(door_street_to_shop):
                scene = "shop"
                char_x, char_y = 100, 350
            elif char_rect.colliderect(door_street_to_pet):
                scene = "pet"
                char_x, char_y = 100, 350
            elif char_rect.colliderect(door_street_to_job):
                scene = "job"
                char_x, char_y = 100, 350

        elif scene == "shop":
            screen.blit(shop_bg, (0, 0))
            pygame.draw.rect(screen, BROWN, door_shop_to_street)
            draw_text("Street", door_shop_to_street.x + 70, door_shop_to_street.y + 5, WHITE)

            if char_rect.colliderect(door_shop_to_street):
                scene = "street"
                char_x, char_y = 400, 400

        elif scene == "pet":
            screen.blit(pet_bg, (0, 0))
            pygame.draw.rect(screen, BROWN, door_pet_to_workshop)
            draw_text("Workshop", door_pet_to_workshop.x + 10, door_pet_to_workshop.y + 5, WHITE)

            pygame.draw.rect(screen, BROWN, door_pet_to_vets)
            draw_text("Vets", door_pet_to_vets.x + 35, door_pet_to_vets.y + 5, WHITE)

            pygame.draw.rect(screen, BROWN, door_pet_to_street)
            draw_text("Street", door_pet_to_street.x + 35, door_pet_to_street.y + 5, WHITE)

            if char_rect.colliderect(door_pet_to_workshop):
                # Add your workshop scene or action here
                pass

            if char_rect.colliderect(door_pet_to_vets):
                # Add your vets scene or action here
                pass

            if char_rect.colliderect(door_pet_to_street):
                scene = "street"
                char_x, char_y = 500, 400

        elif scene == "job":
            if job == "hacker":
                screen.blit(hacker_bg, (0, 0))
            elif job == "robber":
                screen.blit(robber_bg, (0, 0))
            elif job == "spy":
                screen.blit(spy_bg, (0, 0))

            door_job_to_street = pygame.Rect(0, 250, 80, 150)
            pygame.draw.rect(screen, BROWN, door_job_to_street)
            draw_text("Street", door_job_to_street.x + 10, door_job_to_street.y + 60, WHITE)

            if char_rect.colliderect(door_job_to_street):
                scene = "street"
                char_x, char_y = 650, 350

        # Draw the player character
        if char_sel == "boy":
            screen.blit(boy_img, (char_x, char_y))
        else:
            screen.blit(girl_img, (char_x, char_y))

        # Dog follows the player smoothly
        dx = char_x - dog_x
        dy = char_y - dog_y
        dist = math.hypot(dx, dy)
        if dist > 5:
            dog_x += dx / dist * dog_spd
            dog_y += dy / dist * dog_spd

        screen.blit(dog_img, (dog_x, dog_y))

        # Placeholder feeding logic (expand as you want)
        current_time = time.time()
        if current_time - last_fed > 20:
            dog_hungry = True
        if current_time - last_drink > 20:
            dog_thirsty = True

        if dog_hungry:
            draw_text("Dog is hungry! Click food bowl.", 10, 10, (255, 0, 0))
        if dog_thirsty:
            draw_text("Dog is thirsty! Click water bowl.", 10, 40, (0, 0, 255))

        pygame.display.update()
        clock.tick(60)

if __name__ == "__main__":
    main_game()

